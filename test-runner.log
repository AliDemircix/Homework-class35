2022-02-06 12:29:28 info: ---------------------------------------
2022-02-06 12:29:28 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-02-06 12:29:28 info: ---------------------------------------
2022-02-06 12:29:33 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (2 ms)
    × should have all TODO comments removed (2 ms)
    √ `getAnonName` should not contain unneeded console.log calls (1 ms)
    √ should call `new Promise()`
    √ should take a single argument
    √ `resolve()` should be called with a one argument
    √ `reject()` should be called with a one argument (1 ms)
    √ should resolve when called with a string argument (3 ms)
    × should reject with an Error object when called without an argument (2 ms)

  ● getAnonName › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      103 | function testTodosRemoved(getSource) {
      104 |   test('should have all TODO comments removed', () => {
    > 105 |     expect(/\bTODO\b/.test(getSource())).toBeFalsy();
          |                                          ^
      106 |   });
      107 | }
      108 |

      at Object.<anonymous> (test-runner/unit-test-helpers.js:105:42)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).rejects.toBeInstanceOf(expected)

    Expected constructor: Error

    Received value has no prototype
    Received value: "You didn't pass in a first name!"

      90 |     timeoutSpy.mockRestore();
      91 |     expect(promise).toBeInstanceOf(Promise);
    > 92 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |                                    ^
      93 |   });
      94 | });
      95 |

      at Object.toBeInstanceOf (node_modules/expect/build/index.js:285:22)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:92:36)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 7 passed, 9 total
Snapshots:   0 total
Time:        1.152 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-02-06 12:31:17 info: ---------------------------------------
2022-02-06 12:31:17 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-02-06 12:31:17 info: ---------------------------------------
2022-02-06 12:31:21 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (2 ms)
    √ should have all TODO comments removed (1 ms)
    √ `getAnonName` should not contain unneeded console.log calls (1 ms)
    √ should call `new Promise()` (1 ms)
    √ should take a single argument
    √ `resolve()` should be called with a one argument (1 ms)
    √ `reject()` should be called with a one argument
    √ should resolve when called with a string argument (2 ms)
    × should reject with an Error object when called without an argument (2 ms)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).rejects.toBeInstanceOf(expected)

    Expected constructor: Error

    Received value has no prototype
    Received value: "You didn't pass in a first name!"

      90 |     timeoutSpy.mockRestore();
      91 |     expect(promise).toBeInstanceOf(Promise);
    > 92 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |                                    ^
      93 |   });
      94 | });
      95 |

      at Object.toBeInstanceOf (node_modules/expect/build/index.js:285:22)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:92:36)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 8 passed, 9 total
Snapshots:   0 total
Time:        0.877 s, estimated 1 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-02-06 12:32:58 info: ---------------------------------------
2022-02-06 12:32:58 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-02-06 12:32:58 info: ---------------------------------------
2022-02-06 12:33:03 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (1 ms)
    √ should have all TODO comments removed (1 ms)
    √ `getAnonName` should not contain unneeded console.log calls
    √ should call `new Promise()`
    √ should take a single argument (1 ms)
    √ `resolve()` should be called with a one argument (2 ms)
    √ `reject()` should be called with a one argument (1 ms)
    √ should resolve when called with a string argument (3 ms)
    × should reject with an Error object when called without an argument (3 ms)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).rejects.toBeInstanceOf()

    Received promise resolved instead of rejected
    Resolved to value: "undefined Doe"

      90 |     timeoutSpy.mockRestore();
      91 |     expect(promise).toBeInstanceOf(Promise);
    > 92 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |            ^
      93 |   });
      94 | });
      95 |

      at expect (node_modules/expect/build/index.js:178:15)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:92:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 8 passed, 9 total
Snapshots:   0 total
Time:        0.844 s, estimated 1 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-02-06 12:34:29 info: ---------------------------------------
2022-02-06 12:34:29 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-02-06 12:34:29 info: ---------------------------------------
2022-02-06 12:34:44 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js (10.833 s)
  getAnonName
    √ should exist and be executable (3 ms)
    √ should have all TODO comments removed (1 ms)
    √ `getAnonName` should not contain unneeded console.log calls (1 ms)
    √ should call `new Promise()`
    √ should take a single argument
    √ `resolve()` should be called with a one argument
    √ `reject()` should be called with a one argument
    × should resolve when called with a string argument (5007 ms)
    × should reject with an Error object when called without an argument (5008 ms)

  ● getAnonName › should resolve when called with a string argument

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      69 |   });
      70 |
    > 71 |   test('should resolve when called with a string argument', async () => {
         |   ^
      72 |     expect.assertions(3);
      73 |     expect(exported).toBeDefined();
      74 |     const timeoutSpy = jest

      at 3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:71:3
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:10:1)

  ● getAnonName › should resolve when called with a string argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      70 |
      71 |   test('should resolve when called with a string argument', async () => {
    > 72 |     expect.assertions(3);
         |            ^
      73 |     expect(exported).toBeDefined();
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:72:12)

  ● getAnonName › should reject with an Error object when called without an argument

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      81 |   });
      82 |
    > 83 |   test('should reject with an Error object when called without an argument', async () => {
         |   ^
      84 |     expect.assertions(3);
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest

      at 3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:83:3
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:10:1)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 7 passed, 9 total
Snapshots:   0 total
Time:        10.963 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-02-06 12:39:51 info: ---------------------------------------
2022-02-06 12:39:51 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-02-06 12:39:51 info: ---------------------------------------
2022-02-06 12:39:55 info: All unit tests passed.
2022-02-06 12:40:02 info: All steps were completed successfully
2022-02-06 12:40:12 info: ---------------------------------------
2022-02-06 12:40:12 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-02-06 12:40:12 info: ---------------------------------------
2022-02-06 12:40:16 info: All unit tests passed.
2022-02-06 12:40:22 info: All steps were completed successfully
2022-02-06 12:45:34 info: -------------------------------------------------
2022-02-06 12:45:34 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2022-02-06 12:45:34 info: -------------------------------------------------
2022-02-06 12:45:38 info: All unit tests passed.
2022-02-06 12:45:44 info: All steps were completed successfully
2022-02-06 04:50:14 info: ---------------------------------------
2022-02-06 04:50:14 info: >>> Running Unit Test `ex3-rollDie` <<<
2022-02-06 04:50:14 info: ---------------------------------------
2022-02-06 04:50:20 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-rollDie.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js
  rollDie
    √ should exist and be executable (1 ms)
    × should have all TODO comments removed (1 ms)
    × should call `new Promise()` (1 ms)
    √ `resolve()` should be called with a one argument (1 ms)
    √ `reject()` should be called with a one argument
    × should resolve when the die settles successfully (2 ms)
    √ should reject with an Error when the die rolls off the table

  ● rollDie › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      103 | function testTodosRemoved(getSource) {
      104 |   test('should have all TODO comments removed', () => {
    > 105 |     expect(/\bTODO\b/.test(getSource())).toBeFalsy();
          |                                          ^
      106 |   });
      107 | }
      108 |

      at Object.<anonymous> (test-runner/unit-test-helpers.js:105:42)

  ● rollDie › should call `new Promise()`

    expect(received).toBeDefined()

    Received: undefined

      38 |
      39 |   test('should call `new Promise()`', () => {
    > 40 |     expect(state.newPromise).toBeDefined();
         |                              ^
      41 |   });
      42 |
      43 |   test('`resolve()` should be called with a one argument', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:40:30)

  ● rollDie › should resolve when the die settles successfully

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise
    Received constructor: Function

      60 |
      61 |     const promise = rollDie();
    > 62 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      63 |     const assertionPromise = expect(promise).resolves.toBeDefined();
      64 |
      65 |     promise.finally(() => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:62:21)

  ● rollDie › should resolve when the die settles successfully

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      50 |
      51 |   test('should resolve when the die settles successfully', () => {
    > 52 |     expect.assertions(3);
         |            ^
      53 |     expect(exported).toBeDefined();
      54 |
      55 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:52:12)

Test Suites: 1 failed, 1 total
Tests:       3 failed, 4 passed, 7 total
Snapshots:   0 total
Time:        1.057 s
Ran all test suites matching /ex3-rollDie.test.js/i.
2022-02-06 04:51:05 info: ---------------------------------------
2022-02-06 04:51:05 info: >>> Running Unit Test `ex3-rollDie` <<<
2022-02-06 04:51:05 info: ---------------------------------------
2022-02-06 04:51:10 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-rollDie.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js
  rollDie
    × should exist and be executable (6 ms)
    × should have all TODO comments removed (1 ms)
    × should call `new Promise()`
    × `resolve()` should be called with a one argument (2 ms)
    × `reject()` should be called with a one argument (1 ms)
    × should resolve when the die settles successfully (1 ms)
    × should reject with an Error when the die rolls off the table

  ● rollDie › should exist and be executable

    expect(received).toBeDefined()

    Received: undefined

      32 |
      33 |   test('should exist and be executable', () => {
    > 34 |     expect(exported).toBeDefined();
         |                      ^
      35 |   });
      36 |
      37 |   testTodosRemoved(() => source);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:34:22)

  ● rollDie › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      103 | function testTodosRemoved(getSource) {
      104 |   test('should have all TODO comments removed', () => {
    > 105 |     expect(/\bTODO\b/.test(getSource())).toBeFalsy();
          |                                          ^
      106 |   });
      107 | }
      108 |

      at Object.<anonymous> (test-runner/unit-test-helpers.js:105:42)

  ● rollDie › should call `new Promise()`

    expect(received).toBeDefined()

    Received: undefined

      38 |
      39 |   test('should call `new Promise()`', () => {
    > 40 |     expect(state.newPromise).toBeDefined();
         |                              ^
      41 |   });
      42 |
      43 |   test('`resolve()` should be called with a one argument', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:40:30)

  ● rollDie › `resolve()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      42 |
      43 |   test('`resolve()` should be called with a one argument', () => {
    > 44 |     expect(state.resolve).toBe(1);
         |                           ^
      45 |   });
      46 |
      47 |   test('`reject()` should be called with a one argument', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:44:27)

  ● rollDie › `reject()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      46 |
      47 |   test('`reject()` should be called with a one argument', () => {
    > 48 |     expect(state.reject).toBe(1);
         |                          ^
      49 |   });
      50 |
      51 |   test('should resolve when the die settles successfully', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:48:26)

  ● rollDie › should resolve when the die settles successfully

    expect(received).toBeDefined()

    Received: undefined

      51 |   test('should resolve when the die settles successfully', () => {
      52 |     expect.assertions(3);
    > 53 |     expect(exported).toBeDefined();
         |                      ^
      54 |
      55 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();
      56 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:53:22)

  ● rollDie › should resolve when the die settles successfully

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      50 |
      51 |   test('should resolve when the die settles successfully', () => {
    > 52 |     expect.assertions(3);
         |            ^
      53 |     expect(exported).toBeDefined();
      54 |
      55 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:52:12)

  ● rollDie › should reject with an Error when the die rolls off the table

    expect(received).toBeDefined()

    Received: undefined

      74 |   test('should reject with an Error when the die rolls off the table', async () => {
      75 |     expect.assertions(3);
    > 76 |     expect(exported).toBeDefined();
         |                      ^
      77 |
      78 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();
      79 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0.999);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:76:22)

  ● rollDie › should reject with an Error when the die rolls off the table

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      73 |
      74 |   test('should reject with an Error when the die rolls off the table', async () => {
    > 75 |     expect.assertions(3);
         |            ^
      76 |     expect(exported).toBeDefined();
      77 |
      78 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:75:12)

Test Suites: 1 failed, 1 total
Tests:       7 failed, 7 total
Snapshots:   0 total
Time:        1.309 s
Ran all test suites matching /ex3-rollDie.test.js/i.
2022-02-06 04:51:13 error: *** ESLint Report ***

ex3-rollDie.js
  16:39  error  Parsing error: Unexpected token =>

✖ 1 problem (1 error, 0 warnings)


2022-02-06 04:51:51 info: ---------------------------------------
2022-02-06 04:51:51 info: >>> Running Unit Test `ex3-rollDie` <<<
2022-02-06 04:51:51 info: ---------------------------------------
2022-02-06 04:51:55 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-rollDie.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js
  rollDie
    √ should exist and be executable (2 ms)
    × should have all TODO comments removed (3 ms)
    √ should call `new Promise()` (1 ms)
    √ `resolve()` should be called with a one argument (1 ms)
    √ `reject()` should be called with a one argument
    √ should resolve when the die settles successfully (4 ms)
    √ should reject with an Error when the die rolls off the table (1 ms)

  ● rollDie › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      103 | function testTodosRemoved(getSource) {
      104 |   test('should have all TODO comments removed', () => {
    > 105 |     expect(/\bTODO\b/.test(getSource())).toBeFalsy();
          |                                          ^
      106 |   });
      107 | }
      108 |

      at Object.<anonymous> (test-runner/unit-test-helpers.js:105:42)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 6 passed, 7 total
Snapshots:   0 total
Time:        0.797 s, estimated 2 s
Ran all test suites matching /ex3-rollDie.test.js/i.
2022-02-06 04:52:23 info: ---------------------------------------
2022-02-06 04:52:23 info: >>> Running Unit Test `ex3-rollDie` <<<
2022-02-06 04:52:23 info: ---------------------------------------
2022-02-06 04:52:27 info: All unit tests passed.
2022-02-06 04:52:34 info: All steps were completed successfully
2022-02-06 08:10:26 info: --------------------------------------------
2022-02-06 08:10:26 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2022-02-06 08:10:26 info: --------------------------------------------
2022-02-06 08:10:32 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-pokerDiceAll.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js
  ex4-pokerDiceAll
    √ should exist and be executable (2 ms)
    × should have all TODO comments removed (1 ms)
    √ `rollDice` should not contain unneeded console.log calls (1 ms)
    × should use `dice.map()`
    √ should use `Promise.all()`
    √ should resolve when all dice settle successfully (14 ms)
    √ should reject with an Error when a die rolls off the table (54 ms)

  ● ex4-pokerDiceAll › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      103 | function testTodosRemoved(getSource) {
      104 |   test('should have all TODO comments removed', () => {
    > 105 |     expect(/\bTODO\b/.test(getSource())).toBeFalsy();
          |                                          ^
      106 |   });
      107 | }
      108 |

      at Object.<anonymous> (test-runner/unit-test-helpers.js:105:42)

  ● ex4-pokerDiceAll › should use `dice.map()`

    expect(received).toBeDefined()

    Received: undefined

      38 |
      39 |   test('should use `dice.map()`', () => {
    > 40 |     expect(state.diceMap).toBeDefined();
         |                           ^
      41 |   });
      42 |
      43 |   test('should use `Promise.all()`', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:40:27)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 5 passed, 7 total
Snapshots:   0 total
Time:        1.423 s
Ran all test suites matching /ex4-pokerDiceAll.test.js/i.
2022-02-06 08:11:21 info: --------------------------------------------
2022-02-06 08:11:21 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2022-02-06 08:11:21 info: --------------------------------------------
2022-02-06 08:11:27 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-pokerDiceAll.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js
  ex4-pokerDiceAll
    √ should exist and be executable (1 ms)
    × should have all TODO comments removed (2 ms)
    √ `rollDice` should not contain unneeded console.log calls (1 ms)
    √ should use `dice.map()` (1 ms)
    √ should use `Promise.all()` (1 ms)
    √ should resolve when all dice settle successfully (27 ms)
    √ should reject with an Error when a die rolls off the table (66 ms)

  ● ex4-pokerDiceAll › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      103 | function testTodosRemoved(getSource) {
      104 |   test('should have all TODO comments removed', () => {
    > 105 |     expect(/\bTODO\b/.test(getSource())).toBeFalsy();
          |                                          ^
      106 |   });
      107 | }
      108 |

      at Object.<anonymous> (test-runner/unit-test-helpers.js:105:42)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 6 passed, 7 total
Snapshots:   0 total
Time:        1.106 s, estimated 2 s
Ran all test suites matching /ex4-pokerDiceAll.test.js/i.
2022-02-06 08:11:46 info: --------------------------------------------
2022-02-06 08:11:46 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2022-02-06 08:11:46 info: --------------------------------------------
2022-02-06 08:11:51 info: All unit tests passed.
2022-02-06 08:11:58 info: All steps were completed successfully
2022-02-06 09:08:29 info: ----------------------------------------------
2022-02-06 09:08:29 info: >>> Running Unit Test `ex5-pokerDiceChain` <<<
2022-02-06 09:08:29 info: ----------------------------------------------
2022-02-06 09:08:33 error: *** Unit Test Error Report ***

Command failed: npx jest ex5-pokerDiceChain.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex5-pokerDiceChain.test.js
  ex5-pokerDiceChain
    √ should exist and be executable (1 ms)
    √ should have all TODO comments removed
    √ `rollDice` should not contain unneeded console.log calls (4 ms)
    × should resolve when all dice settle successfully (139 ms)
    √ should reject with an Error when a die rolls off the table (100 ms)

  ● ex5-pokerDiceChain › should resolve when all dice settle successfully

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      32 |     expect(promise).toBeInstanceOf(Promise);
      33 |     const result = await promise;
    > 34 |     expect(Array.isArray(result)).toBe(true);
         |                                   ^
      35 |     expect(result).toHaveLength(5);
      36 |
      37 |     promise.finally(() => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex5-pokerDiceChain.test.js:34:35)

  ● ex5-pokerDiceChain › should resolve when all dice settle successfully

    expect.assertions(4)

    Expected four assertions to be called but received three assertion calls.

      24 |
      25 |   test('should resolve when all dice settle successfully', async () => {
    > 26 |     expect.assertions(4);
         |            ^
      27 |     expect(exported).toBeDefined();
      28 |
      29 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex5-pokerDiceChain.test.js:26:12)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 4 passed, 5 total
Snapshots:   0 total
Time:        0.878 s
Ran all test suites matching /ex5-pokerDiceChain.test.js/i.
2022-02-06 09:10:01 info: ----------------------------------------------
2022-02-06 09:10:01 info: >>> Running Unit Test `ex5-pokerDiceChain` <<<
2022-02-06 09:10:01 info: ----------------------------------------------
2022-02-06 09:10:04 info: All unit tests passed.
2022-02-06 09:10:08 info: All steps were completed successfully
